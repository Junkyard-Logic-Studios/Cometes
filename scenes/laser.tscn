[gd_scene load_steps=10 format=3 uid="uid://c1vc63d2q2sos"]

[ext_resource type="Script" path="res://scripts/laser.gd" id="1_08pum"]
[ext_resource type="Shader" path="res://materials/space_mesh_unshaded.gdshader" id="3_uvb7a"]
[ext_resource type="PackedScene" uid="uid://crbv1xffhd0yp" path="res://scenes/space_mesh.tscn" id="4_sxkme"]

[sub_resource type="CylinderShape3D" id="CylinderShape3D_j2mxq"]
height = 0.8
radius = 0.08

[sub_resource type="Shader" id="Shader_vjkvv"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.2.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6puay"]
render_priority = 0
shader = SubResource("Shader_vjkvv")
shader_parameter/albedo = Color(1, 0.470588, 0, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="CapsuleMesh" id="CapsuleMesh_e8gip"]
material = SubResource("ShaderMaterial_6puay")
radius = 0.08
height = 1.5
radial_segments = 8
rings = 2

[sub_resource type="CapsuleMesh" id="CapsuleMesh_d3vp1"]
radius = 0.08
height = 1.0
radial_segments = 8
rings = 2

[sub_resource type="CylinderShape3D" id="CylinderShape3D_w4ngb"]
height = 1.0
radius = 0.1

[node name="Laser" type="RigidBody3D"]
collision_layer = 2
collision_mask = 2
mass = 0.01
gravity_scale = 0.0
script = ExtResource("1_08pum")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
shape = SubResource("CylinderShape3D_j2mxq")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
mesh = SubResource("CapsuleMesh_e8gip")

[node name="SpaceMesh" parent="." instance=ExtResource("4_sxkme")]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
mesh = SubResource("CapsuleMesh_d3vp1")
color = Color(0.827451, 0.513726, 0, 1)
shader = ExtResource("3_uvb7a")

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(-1, 0, 0, 0, -4.37114e-08, 1, 0, 1, 4.37114e-08, 0, 0, 0)
light_color = Color(0.818685, 0.469849, 0.268967, 1)
light_energy = 5.382

[node name="Lifetime" type="Timer" parent="."]
wait_time = 2.0
one_shot = true
autostart = true

[node name="Area3D" type="Area3D" parent="."]
monitorable = false

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
shape = SubResource("CylinderShape3D_w4ngb")

[connection signal="timeout" from="Lifetime" to="." method="OnLifetimeTimeout"]
[connection signal="timeout" from="Lifetime" to="." method="_on_lifetime_timeout"]
[connection signal="body_entered" from="Area3D" to="." method="OnArea3DBodyEntered"]
[connection signal="body_entered" from="Area3D" to="." method="_on_area_3d_body_entered"]
